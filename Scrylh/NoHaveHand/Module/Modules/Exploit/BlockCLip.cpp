#include "BlockClip.h"

BlockClip::BlockClip() : IModule(0, Category::EXPLOIT, "Clip into the block you are looking at by a small amount") {
    registerFloatSetting("Clip Amount", &clipvalue, clipvalue, 0.01f, 0.5f);  // Adjust how much you want to clip.
}

BlockClip::~BlockClip() {
}

const char* BlockClip::getModuleName() {
    return ("BlockClip");
}

void BlockClip::onMove(C_MoveInputHandler* input) {
    if (!isEnabled())
        return;

    // Get the player's position and yaw
    vec3_t localPlayerPos = *g_Data.getLocalPlayer()->getPos();
    float yaw = g_Data.getLocalPlayer()->yaw;

    // Calculate the offset based on the yaw
    double xOffset = 0.0;
    double zOffset = 0.0;

    // Calculate the block coordinates you are looking at
    vec3_ti blockPos = g_Data.getLookingBlockPos();

    // Check if the block coordinates are valid
    if (blockPos != vec3_ti(0, 0, 0)) {
        // Adjust the player's position to clip into the block
        xOffset = blockPos.x - localPlayerPos.x;
        zOffset = blockPos.z - localPlayerPos.z;

        // Normalize the offsets and apply the clipvalue
        double length = sqrt(xOffset * xOffset + zOffset * zOffset);
        if (length > 0) {
            double factor = clipvalue / length;
            xOffset *= factor;
            zOffset *= factor;
        }

        // Update the player's position
        localPlayerPos.x += xOffset;
        localPlayerPos.z += zOffset;

        // Set the player's position
        g_Data.getLocalPlayer()->setPos(localPlayerPos);
    }

}
